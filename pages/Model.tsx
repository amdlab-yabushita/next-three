/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    床: THREE.Mesh
    Cube_1: THREE.Mesh
    Cube_2: THREE.Mesh
    立方体: THREE.Mesh
    立方体001: THREE.Mesh
    立方体002: THREE.Mesh
    立方体003: THREE.Mesh
    立方体004: THREE.Mesh
    立方体005: THREE.Mesh
    立方体006: THREE.Mesh
    立方体007: THREE.Mesh
    立方体008: THREE.Mesh
    立方体009: THREE.Mesh
  }
  materials: {
    ['マテリアル.001']: THREE.MeshStandardMaterial
    wood: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/model.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.床.geometry} material={materials['マテリアル.001']} scale={[-121.85, 269.03, -121.85]} />
      <group position={[0.69, 0.81, 0]} scale={[0.95, 0.16, 1.41]}>
        <mesh castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={nodes.Cube_1.material} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={nodes.Cube_2.material} />
      </group>
      <mesh castShadow receiveShadow geometry={nodes.立方体.geometry} material={nodes.立方体.material} position={[1.41, 0.46, -1.14]} scale={[0.07, 0.47, 0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体001.geometry} material={nodes.立方体001.material} position={[-0.03, 0.46, -1.14]} scale={[0.07, 0.47, 0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体002.geometry} material={nodes.立方体002.material} position={[1.41, 0.46, 1.14]} scale={[0.07, 0.47, 0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体003.geometry} material={nodes.立方体003.material} position={[-0.03, 0.46, 1.14]} scale={[0.07, 0.47, 0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体004.geometry} material={nodes.立方体004.material} position={[-0.99, 0.38, -0.02]} rotation={[0, 0.34, 0]} scale={1.5} />
      <mesh castShadow receiveShadow geometry={nodes.立方体005.geometry} material={nodes.立方体005.material} position={[-1.35, 0.92, 0.11]} rotation={[0, 0.34, Math.PI / 2]} scale={1.5} />
      <mesh castShadow receiveShadow geometry={nodes.立方体006.geometry} material={nodes.立方体006.material} position={[-1.48, 0.46, -0.26]} rotation={[0, 0.34, 0]} scale={[0.06, 0.47, 0.06]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体007.geometry} material={nodes.立方体007.material} position={[-1.22, 0.46, 0.47]} rotation={[0, 0.34, 0]} scale={[0.06, 0.47, 0.06]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体008.geometry} material={nodes.立方体008.material} position={[-0.76, 0.19, -0.51]} rotation={[0, 0.34, 0]} scale={[0.06, 0.19, 0.06]} />
      <mesh castShadow receiveShadow geometry={nodes.立方体009.geometry} material={nodes.立方体009.material} position={[-0.51, 0.19, 0.21]} rotation={[0, 0.34, 0]} scale={[0.06, 0.19, 0.06]} />
    </group>
  )
}

useGLTF.preload('/model.glb')
